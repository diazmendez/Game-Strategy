%!PS-Adobe-2.0
%%Title: tests_his_seq_emp.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jun 26 14:17:41 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tests_his_seq_emp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Rogelio Díaz-Méndez,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 26 14:17:41 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1340 640 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 640 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1340 1472 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 1472 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.05)]
] -66.7 MRshow
1.000 UL
LTb
1340 2304 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 2304 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
1.000 UL
LTb
1340 3136 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 3136 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.15)]
] -66.7 MRshow
1.000 UL
LTb
1340 3968 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 3968 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1340 4800 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 4800 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.25)]
] -66.7 MRshow
1.000 UL
LTb
1845 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1845 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
2407 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2407 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
2969 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2969 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
3530 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3530 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
4092 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4092 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
4654 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4654 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 60)]
] -66.7 MCshow
1.000 UL
LTb
5215 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5215 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 70)]
] -66.7 MCshow
1.000 UL
LTb
5777 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5777 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 80)]
] -66.7 MCshow
1.000 UL
LTb
6338 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6338 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 90)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1340 4800 N
0 -4160 V
5560 0 V
0 4160 V
-5560 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 340.0 0.0 true true 0 (P\(L\))]
] -113.3 MCshow
grestore
LTb
LCb setrgbcolor
4120 140 M
[ [(Times-Roman) 340.0 0.0 true true 0 (L)]
] -113.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
3477 4137 N
0 600 V
3303 0 V
0 -600 V
-3303 0 V
Z stroke
3477 4737 M
3303 0 V
2.000 UP
stroke
LTb
3477 4637 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.0     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.0)]
] -46.7 MLshow
LT0
6117 4637 M
543 0 V
1340 4794 M
1446 2995 L
106 -610 V
106 -399 V
107 -282 V
106 -182 V
106 -136 V
106 -118 V
106 -121 V
2295 892 L
106 141 V
107 -56 V
106 -41 V
106 -56 V
106 -25 V
106 -22 V
106 -30 V
106 -2 V
3251 698 L
106 68 V
106 -31 V
106 6 V
106 -23 V
106 -14 V
106 -10 V
107 -5 V
106 -9 V
106 -19 V
106 13 V
106 -3 V
106 -3 V
107 -4 V
106 -2 V
106 -4 V
106 -2 V
106 -2 V
106 -9 V
106 5 V
107 0 V
106 1 V
106 -3 V
106 -3 V
106 1 V
106 -2 V
106 0 V
107 -2 V
106 2 V
106 -2 V
106 2 V
106 -3 V
106 1 V
106 -1 V
107 1 V
40 0 V
1340 4794 C9
1446 2995 C9
1552 2385 C9
1658 1986 C9
1765 1704 C9
1871 1522 C9
1977 1386 C9
2083 1268 C9
2189 1147 C9
2295 892 C9
2401 1033 C9
2508 977 C9
2614 936 C9
2720 880 C9
2826 855 C9
2932 833 C9
3038 803 C9
3144 801 C9
3251 698 C9
3357 766 C9
3463 735 C9
3569 741 C9
3675 718 C9
3781 704 C9
3887 694 C9
3994 689 C9
4100 680 C9
4206 661 C9
4312 674 C9
4418 671 C9
4524 668 C9
4631 664 C9
4737 662 C9
4843 658 C9
4949 656 C9
5055 654 C9
5161 645 C9
5267 650 C9
5374 650 C9
5480 651 C9
5586 648 C9
5692 645 C9
5798 646 C9
5904 644 C9
6010 644 C9
6117 642 C9
6223 644 C9
6329 642 C9
6435 644 C9
6541 641 C9
6647 642 C9
6753 641 C9
6860 642 C9
6388 4637 C9
2.000 UP
1.000 UL
LT0
LTb
3477 4437 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.5     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.5)]
] -46.7 MLshow
LT0
6117 4437 M
543 0 V
1340 4308 M
1499 2784 L
160 -349 V
159 -454 V
160 -187 V
159 -249 V
160 -369 V
159 187 V
160 -168 V
159 -28 V
160 -114 V
159 -41 V
3254 857 L
159 72 V
160 -13 V
159 -71 V
160 -3 V
159 -38 V
160 -69 V
159 42 V
160 -29 V
159 -7 V
160 -24 V
159 3 V
160 -38 V
159 19 V
160 -8 V
159 -8 V
160 0 V
159 -5 V
160 -6 V
159 -16 V
160 7 V
159 -2 V
160 -5 V
137 1 V
1340 4308 Box
1499 2784 Box
1659 2435 Box
1818 1981 Box
1978 1794 Box
2137 1545 Box
2297 1176 Box
2456 1363 Box
2616 1195 Box
2775 1167 Box
2935 1053 Box
3094 1012 Box
3254 857 Box
3413 929 Box
3573 916 Box
3732 845 Box
3892 842 Box
4051 804 Box
4211 735 Box
4370 777 Box
4530 748 Box
4689 741 Box
4849 717 Box
5008 720 Box
5168 682 Box
5327 701 Box
5487 693 Box
5646 685 Box
5806 685 Box
5965 680 Box
6125 674 Box
6284 658 Box
6444 665 Box
6603 663 Box
6763 658 Box
6388 4437 Box
2.000 UP
1.000 UL
LT0
LTb
3477 4237 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.75   vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.75)]
] -46.7 MLshow
LT0
6117 4237 M
543 0 V
1340 4090 M
1608 2800 L
268 -380 V
268 -418 V
268 -412 V
267 89 V
268 -192 V
268 -144 V
268 -215 V
268 11 V
268 -50 V
268 -58 V
268 -56 V
268 -94 V
267 14 V
268 -32 V
268 -36 V
268 -50 V
268 17 V
268 -33 V
268 -11 V
202 -19 V
1340 4090 Pls
1608 2800 Pls
1876 2420 Pls
2144 2002 Pls
2412 1590 Pls
2679 1679 Pls
2947 1487 Pls
3215 1343 Pls
3483 1128 Pls
3751 1139 Pls
4019 1089 Pls
4287 1031 Pls
4555 975 Pls
4823 881 Pls
5090 895 Pls
5358 863 Pls
5626 827 Pls
5894 777 Pls
6162 794 Pls
6430 761 Pls
6698 750 Pls
6388 4237 Pls
1.000 UL
LTb
1340 4800 N
0 -4160 V
5560 0 V
0 4160 V
-5560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
