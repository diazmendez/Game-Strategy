%!PS-Adobe-2.0
%%Title: tests_his_seq_emp_log.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jun 26 14:17:41 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tests_his_seq_emp_log.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Rogelio Díaz-Méndez,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 26 14:17:41 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1100 640 M
63 0 V
5737 0 R
-63 0 V
stroke
980 640 M
[ [(Times-Roman) 200.0 0.0 true true 0 (10)]
[(Times-Roman) 160.0 100.0 true true 0 (-5)]
] -86.7 MRshow
1.000 UL
LTb
1100 1569 M
63 0 V
5737 0 R
-63 0 V
stroke
980 1569 M
[ [(Times-Roman) 200.0 0.0 true true 0 (10)]
[(Times-Roman) 160.0 100.0 true true 0 (-4)]
] -86.7 MRshow
1.000 UL
LTb
1100 2498 M
63 0 V
5737 0 R
-63 0 V
stroke
980 2498 M
[ [(Times-Roman) 200.0 0.0 true true 0 (10)]
[(Times-Roman) 160.0 100.0 true true 0 (-3)]
] -86.7 MRshow
1.000 UL
LTb
1100 3428 M
63 0 V
5737 0 R
-63 0 V
stroke
980 3428 M
[ [(Times-Roman) 200.0 0.0 true true 0 (10)]
[(Times-Roman) 160.0 100.0 true true 0 (-2)]
] -86.7 MRshow
1.000 UL
LTb
1100 4357 M
63 0 V
5737 0 R
-63 0 V
stroke
980 4357 M
[ [(Times-Roman) 200.0 0.0 true true 0 (10)]
[(Times-Roman) 160.0 100.0 true true 0 (-1)]
] -86.7 MRshow
1.000 UL
LTb
2051 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2051 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
3020 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3020 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
3990 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3990 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
4960 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4960 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
5930 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5930 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1100 4800 N
0 -4160 V
5800 0 V
0 4160 V
-5800 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 340.0 0.0 true true 0 (P\(L\))]
] -113.3 MCshow
grestore
LTb
LCb setrgbcolor
4000 140 M
[ [(Times-Roman) 340.0 0.0 true true 0 (L)]
] -113.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
1100 4726 M
37 -229 V
36 -121 V
37 -105 V
37 -95 V
36 -75 V
37 -68 V
37 -69 V
36 -87 V
37 -282 V
37 179 V
36 -62 V
37 -52 V
37 -85 V
36 -44 V
37 -44 V
37 -68 V
36 -6 V
37 -410 V
37 312 V
36 -114 V
37 24 V
37 -102 V
36 -84 V
37 -62 V
37 -46 V
36 -79 V
37 -258 V
37 192 V
36 -41 V
37 -32 V
37 -67 V
36 -44 V
37 -72 V
37 -54 V
36 -51 V
37 -432 V
37 280 V
36 25 V
37 24 V
36 -137 V
37 -158 V
37 31 V
36 -164 V
37 63 V
37 -342 V
36 279 V
37 -163 V
37 163 V
36 -517 V
37 238 V
37 -102 V
36 54 V
37 -54 V
37 -785 V
73 887 V
37 -238 V
36 -369 V
37 279 V
73 0 V
37 -559 V
37 280 V
36 279 V
37 -116 V
37 -443 V
36 0 V
74 443 V
3740 728 L
36 0 V
37 0 V
37 280 V
4290 728 L
220 0 V
220 0 V
1100 4726 C9
1137 4497 C9
1173 4376 C9
1210 4271 C9
1247 4176 C9
1283 4101 C9
1320 4033 C9
1357 3964 C9
1393 3877 C9
1430 3595 C9
1467 3774 C9
1503 3712 C9
1540 3660 C9
1577 3575 C9
1613 3531 C9
1650 3487 C9
1687 3419 C9
1723 3413 C9
1760 3003 C9
1797 3315 C9
1833 3201 C9
1870 3225 C9
1907 3123 C9
1943 3039 C9
1980 2977 C9
2017 2931 C9
2053 2852 C9
2090 2594 C9
2127 2786 C9
2163 2745 C9
2200 2713 C9
2237 2646 C9
2273 2602 C9
2310 2530 C9
2347 2476 C9
2383 2425 C9
2420 1993 C9
2457 2273 C9
2493 2298 C9
2530 2322 C9
2566 2185 C9
2603 2027 C9
2640 2058 C9
2676 1894 C9
2713 1957 C9
2750 1615 C9
2786 1894 C9
2823 1731 C9
2860 1894 C9
2896 1377 C9
2933 1615 C9
2970 1513 C9
3006 1567 C9
3043 1513 C9
3080 728 C9
3153 1615 C9
3190 1377 C9
3226 1008 C9
3263 1287 C9
3336 1287 C9
3373 728 C9
3410 1008 C9
3446 1287 C9
3483 1171 C9
3520 728 C9
3556 728 C9
3630 1171 C9
3740 728 C9
3776 728 C9
3813 728 C9
3850 1008 C9
4290 728 C9
4510 728 C9
4730 728 C9
2.000 UP
1.000 UL
LT0
1100 4676 M
55 -217 V
55 -72 V
55 -117 V
55 -61 V
55 -98 V
56 -212 V
55 121 V
55 -106 V
55 -21 V
55 -99 V
55 -42 V
55 -217 V
55 115 V
55 -19 V
55 -119 V
55 -7 V
56 -84 V
55 -221 V
55 148 V
55 -96 V
55 -27 V
55 -109 V
55 17 V
55 -260 V
55 147 V
55 -56 V
55 -64 V
56 4 V
55 -50 V
55 -65 V
55 -265 V
55 142 V
55 -32 V
55 -110 V
55 28 V
55 -38 V
55 -246 V
55 118 V
56 -51 V
55 -96 V
55 -41 V
55 41 V
55 -310 V
55 223 V
55 -113 V
55 -296 V
55 396 V
55 -210 V
55 -349 V
56 279 V
55 -53 V
55 -63 V
55 -163 V
55 47 V
55 81 V
55 -244 V
55 -444 V
55 506 V
55 101 V
55 -237 V
56 -90 V
55 90 V
55 -370 V
55 164 V
110 0 V
55 -443 V
110 443 V
55 -443 V
55 279 V
56 -279 V
165 0 V
55 279 V
5452 741 L
55 0 V
55 0 V
166 0 V
110 0 V
165 0 V
551 0 V
1100 4676 Box
1155 4459 Box
1210 4387 Box
1265 4270 Box
1320 4209 Box
1375 4111 Box
1431 3899 Box
1486 4020 Box
1541 3914 Box
1596 3893 Box
1651 3794 Box
1706 3752 Box
1761 3535 Box
1816 3650 Box
1871 3631 Box
1926 3512 Box
1981 3505 Box
2037 3421 Box
2092 3200 Box
2147 3348 Box
2202 3252 Box
2257 3225 Box
2312 3116 Box
2367 3133 Box
2422 2873 Box
2477 3020 Box
2532 2964 Box
2587 2900 Box
2643 2904 Box
2698 2854 Box
2753 2789 Box
2808 2524 Box
2863 2666 Box
2918 2634 Box
2973 2524 Box
3028 2552 Box
3083 2514 Box
3138 2268 Box
3193 2386 Box
3249 2335 Box
3304 2239 Box
3359 2198 Box
3414 2239 Box
3469 1929 Box
3524 2152 Box
3579 2039 Box
3634 1743 Box
3689 2139 Box
3744 1929 Box
3799 1580 Box
3855 1859 Box
3910 1806 Box
3965 1743 Box
4020 1580 Box
4075 1627 Box
4130 1708 Box
4185 1464 Box
4240 1020 Box
4295 1526 Box
4350 1627 Box
4405 1390 Box
4461 1300 Box
4516 1390 Box
4571 1020 Box
4626 1184 Box
4736 1184 Box
4791 741 Box
4901 1184 Box
4956 741 Box
5011 1020 Box
5067 741 Box
5232 741 Box
5287 1020 Box
5452 741 Box
5507 741 Box
5562 741 Box
5728 741 Box
5838 741 Box
6003 741 Box
6554 741 Box
2.000 UP
1.000 UL
LT0
1100 4651 M
93 -189 V
92 -78 V
93 -108 V
92 -145 V
93 36 V
92 -83 V
93 -75 V
92 -147 V
93 9 V
92 -43 V
93 -55 V
92 -63 V
93 -132 V
92 22 V
93 -54 V
92 -71 V
93 -127 V
93 48 V
92 -99 V
93 -37 V
92 -101 V
93 -30 V
92 -68 V
93 -14 V
92 -55 V
93 -156 V
92 86 V
93 -53 V
92 -67 V
93 -239 V
92 97 V
93 45 V
92 -94 V
93 -158 V
92 6 V
93 -93 V
93 29 V
92 -52 V
93 -176 V
92 57 V
93 -169 V
92 60 V
93 -76 V
92 76 V
93 -150 V
92 -42 V
93 -132 V
92 58 V
93 -90 V
92 -74 V
93 39 V
92 -408 V
93 369 V
93 -42 V
92 0 V
93 -607 V
92 280 V
93 443 V
92 -723 V
93 -280 V
92 650 V
93 -206 V
63 0 V
1100 4651 Pls
1193 4462 Pls
1285 4384 Pls
1378 4276 Pls
1470 4131 Pls
1563 4167 Pls
1655 4084 Pls
1748 4009 Pls
1840 3862 Pls
1933 3871 Pls
2025 3828 Pls
2118 3773 Pls
2210 3710 Pls
2303 3578 Pls
2395 3600 Pls
2488 3546 Pls
2580 3475 Pls
2673 3348 Pls
2766 3396 Pls
2858 3297 Pls
2951 3260 Pls
3043 3159 Pls
3136 3129 Pls
3228 3061 Pls
3321 3047 Pls
3413 2992 Pls
3506 2836 Pls
3598 2922 Pls
3691 2869 Pls
3783 2802 Pls
3876 2563 Pls
3968 2660 Pls
4061 2705 Pls
4153 2611 Pls
4246 2453 Pls
4338 2459 Pls
4431 2366 Pls
4524 2395 Pls
4616 2343 Pls
4709 2167 Pls
4801 2224 Pls
4894 2055 Pls
4986 2115 Pls
5079 2039 Pls
5171 2115 Pls
5264 1965 Pls
5356 1923 Pls
5449 1791 Pls
5541 1849 Pls
5634 1759 Pls
5726 1685 Pls
5819 1724 Pls
5911 1316 Pls
6004 1685 Pls
6097 1643 Pls
6189 1643 Pls
6282 1036 Pls
6374 1316 Pls
6467 1759 Pls
6559 1036 Pls
6652 756 Pls
6744 1406 Pls
6837 1200 Pls
1.000 UL
LTb
1100 4800 N
0 -4160 V
5800 0 V
0 4160 V
-5800 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
