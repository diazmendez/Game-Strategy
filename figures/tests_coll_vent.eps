%!PS-Adobe-2.0
%%Title: tests_coll_vent.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jun 26 14:17:36 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tests_coll_vent.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Rogelio Díaz-Méndez,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 26 14:17:36 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
1220 640 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 640 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1220 1630 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1630 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
1.000 UL
LTb
1220 2621 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2621 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
1220 3611 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3611 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MRshow
1.000 UL
LTb
1220 4602 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4602 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
1220 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1220 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1930 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1930 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
2640 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2640 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
3350 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3350 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 15)]
] -66.7 MCshow
1.000 UL
LTb
4060 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4060 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
4770 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4770 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 25)]
] -66.7 MCshow
1.000 UL
LTb
5480 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5480 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
6190 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6190 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 35)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4800 N
0 -4160 V
5680 0 V
0 4160 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 340.0 0.0 true true 0 (<v\(t\)>)]
] -113.3 MCshow
grestore
LTb
LCb setrgbcolor
4060 140 M
[ [(Times-Roman) 340.0 0.0 true true 0 (t )]
[(Symbol) 340.0 0.0 true true 0 (D)]
[(Times-Roman) 340.0 0.0 true true 0 (d)]
] -113.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
1340 3537 N
0 1200 V
3423 0 V
0 -1200 V
-3423 0 V
Z stroke
1340 4737 M
3423 0 V
2.000 UP
stroke
LTb
1340 4637 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.5     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.0)]
] -46.7 MLshow
LT0
1220 640 S9
1291 640 S9
1362 751 S9
1433 816 S9
1504 783 S9
1575 811 S9
1646 866 S9
1717 905 S9
1788 934 S9
1859 976 S9
1930 999 S9
2001 1040 S9
2072 1073 S9
2143 1132 S9
2214 1172 S9
2285 1218 S9
2356 1260 S9
2427 1302 S9
2498 1344 S9
2569 1394 S9
2640 1434 S9
2711 1484 S9
2782 1526 S9
2853 1586 S9
2924 1625 S9
2995 1690 S9
3066 1724 S9
3137 1791 S9
3208 1846 S9
3279 1901 S9
3350 1952 S9
3421 2008 S9
3492 2065 S9
3563 2135 S9
3634 2192 S9
3705 2239 S9
3776 2299 S9
4371 4637 S9
2.000 UP
1.000 UL
LT1
LTb
1340 4437 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.75   vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.0)]
] -46.7 MLshow
LT1
1220 640 D8
1327 640 D8
1433 815 D8
1540 897 D8
1646 872 D8
1753 914 D8
1859 998 D8
1966 1061 D8
2072 1083 D8
2179 1125 D8
2285 1187 D8
2392 1260 D8
2498 1314 D8
2605 1368 D8
2711 1439 D8
2818 1486 D8
2924 1563 D8
3031 1639 D8
3137 1708 D8
3244 1784 D8
3350 1869 D8
3457 1941 D8
3563 2023 D8
3670 2075 D8
3776 2166 D8
3883 2242 D8
3989 2315 D8
4096 2404 D8
4202 2483 D8
4309 2567 D8
4415 2653 D8
4522 2724 D8
4628 2833 D8
4735 2911 D8
4841 3003 D8
4948 3062 D8
5054 3168 D8
5161 3243 D8
5267 3334 D8
5374 3422 D8
4371 4437 D8
2.000 UP
1.000 UL
LT2
LTb
1340 4237 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=1.0     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.0)]
] -46.7 MLshow
LT2
1220 640 D12
1362 640 D12
1504 853 D12
1646 975 D12
1788 965 D12
1930 1020 D12
2072 1148 D12
2214 1217 D12
2356 1266 D12
2498 1349 D12
2640 1442 D12
2782 1522 D12
2924 1607 D12
3066 1687 D12
3208 1798 D12
3350 1889 D12
3492 1981 D12
3634 2078 D12
3776 2192 D12
3918 2263 D12
4060 2391 D12
4202 2470 D12
4344 2580 D12
4486 2680 D12
4628 2790 D12
4770 2890 D12
4912 3016 D12
5054 3106 D12
5196 3237 D12
5338 3336 D12
5480 3458 D12
5622 3569 D12
5764 3693 D12
5906 3803 D12
6048 3933 D12
6190 4043 D12
6332 4164 D12
4371 4237 D12
2.000 UP
1.000 UL
LT3
LTb
1340 4037 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.75   vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.5)]
] -46.7 MLshow
LT3
1220 640 Circle
1256 640 Circle
1291 693 Circle
1327 720 Circle
1362 716 Circle
1398 741 Circle
1433 780 Circle
1469 799 Circle
1504 805 Circle
1540 832 Circle
1575 842 Circle
1611 864 Circle
1646 885 Circle
1682 903 Circle
1717 925 Circle
1753 950 Circle
1788 966 Circle
1824 973 Circle
1859 1009 Circle
1895 1029 Circle
1930 1062 Circle
1966 1091 Circle
2001 1111 Circle
2037 1134 Circle
2072 1176 Circle
2108 1199 Circle
2143 1215 Circle
2179 1257 Circle
2214 1274 Circle
2250 1305 Circle
2285 1341 Circle
2321 1370 Circle
2356 1408 Circle
2392 1439 Circle
2427 1466 Circle
2463 1499 Circle
2498 1531 Circle
2534 1567 Circle
2569 1608 Circle
2605 1643 Circle
2640 1662 Circle
2676 1687 Circle
2711 1711 Circle
2747 1737 Circle
2782 1779 Circle
4371 4037 Circle
2.000 UP
1.000 UL
LT4
LTb
1340 3837 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=1.0     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.5)]
] -46.7 MLshow
LT4
1220 640 TriU
1291 640 TriU
1362 754 TriU
1433 812 TriU
1504 807 TriU
1575 855 TriU
1646 903 TriU
1717 950 TriU
1788 983 TriU
1859 1017 TriU
1930 1065 TriU
2001 1115 TriU
2072 1149 TriU
2143 1204 TriU
2214 1254 TriU
2285 1297 TriU
2356 1345 TriU
2427 1403 TriU
2498 1448 TriU
2569 1503 TriU
2640 1539 TriU
2711 1590 TriU
4371 3837 TriU
2.000 UP
1.000 UL
LT5
LTb
1340 3637 M
[ [(Times-Roman) 200.0 0.0 true true 0 (d)]
[(Times-Roman) 160.0 -60.0 true true 0 (1)]
[(Times-Roman) 200.0 0.0 true true 0 (=1.0     vs   d)]
[(Times-Roman) 160.0 -60.0 true true 0 (2)]
[(Times-Roman) 200.0 0.0 true true 0 (=0.75)]
] -46.7 MLshow
LT5
1220 640 Crs
1256 640 Crs
1291 699 Crs
1327 733 Crs
1362 732 Crs
1398 759 Crs
1433 791 Crs
1469 819 Crs
1504 827 Crs
1540 852 Crs
1575 885 Crs
1611 909 Crs
1646 934 Crs
1682 955 Crs
1717 986 Crs
1753 1002 Crs
1788 1028 Crs
1824 1053 Crs
1859 1088 Crs
1895 1114 Crs
1930 1142 Crs
1966 1177 Crs
2001 1203 Crs
2037 1231 Crs
2072 1248 Crs
2108 1279 Crs
2143 1314 Crs
2179 1332 Crs
2214 1371 Crs
2250 1389 Crs
2285 1427 Crs
4371 3637 Crs
1.000 UL
LTb
1220 4800 N
0 -4160 V
5680 0 V
0 4160 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
%%Pages: 1
